---
import { getGames, initDB } from '../db.js';

await initDB();
const games = await getGames();
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Game Manager - Astro</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10'><circle cx='5' cy='5' r='4' fill='%23007bff'/></svg>">
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 50px auto;
            padding: 20px;
        }
        h1 { color: #333; }
        form {
            background: #f4f4f4;
            padding: 20px;
            border-radius: 5px;
            margin: 20px 0;
        }
        input, textarea {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            box-sizing: border-box;
        }
        button {
            background: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }
        button:hover {
            background: #45a049;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #4CAF50;
            color: white;
        }
        .star-btn {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 20px;
        }
    </style>
</head>
<body>
    <h1>Game Manager - Astro Islands</h1>
    
    <h2>Add Game</h2>
    <form id="add-form">
        <input type="text" id="title" name="title" placeholder="Game Title" required />
        <textarea id="description" name="description" placeholder="Description" required></textarea>
        <button type="submit">Add Game</button>
    </form>
    
    <h2>Games</h2>
    <div id="games-list">
        {games.length === 0 ? (
            <p>No games yet. Add one above!</p>
        ) : (
            <table>
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Stars</th>
                    </tr>
                </thead>
                <tbody>
                    {games.map(game => (
                        <tr id={`game-${game.id}`}>
                            <td>{game.id}</td>
                            <td>{game.title}</td>
                            <td>{game.description}</td>
                            <td>
                                <button class="star-btn" data-id={game.id}>‚≠ê</button>
                                <span id={`stars-${game.id}`}>{game.stars}</span>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        )}
    </div>

    <script>
        console.log('Script loaded');
        
        // Add game form
        const form = document.getElementById('add-form');
        console.log('Form found:', form);
        
        form?.addEventListener('submit', async (e) => {
            e.preventDefault();
            console.log('Form submitted');
            
            const titleInput = document.getElementById('title');
            const descInput = document.getElementById('description');
            
            console.log('Inputs:', titleInput, descInput);
            
            if (!titleInput || !descInput) {
                console.log('Inputs not found!');
                return;
            }
            
            const title = (titleInput as HTMLInputElement).value;
            const description = (descInput as HTMLTextAreaElement).value;
            
            console.log('Values:', { title, description });
            
            const formData = new FormData();
            formData.append('title', title);
            formData.append('description', description);
            
            console.log('Sending POST...');
            const response = await fetch('/api/games', {
                method: 'POST',
                body: formData
            });
            
            console.log('Response:', response.status);
            
            if (response.ok) {
                window.location.reload();
            } else {
                console.error('Failed:', response.status);
            }
        });

        // Star buttons
        document.querySelectorAll('.star-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                const id = (btn as HTMLElement).dataset.id;
                const response = await fetch(`/api/games/${id}/star`, {
                    method: 'POST'
                });
                const game = await response.json();
                const starsEl = document.getElementById(`stars-${id}`);
                if (starsEl) starsEl.textContent = game.stars;
            });
        });
    </script>
</body>
</html>